"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'your-secret-key-here'

# SECURITY WARNING: don't run with debug turned on in production!
# A crucial setting for production environments.
# DEBUG should be False in production to prevent sensitive information from being exposed.
# In development, it should be True for debugging.
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookshelf.apps.BookshelfConfig',
    'relationship_app',
    'csp', # Add the csp app here after installing it
]

MIDDLEWARE = [
    'csp.middleware.CSPMiddleware', # ADD THIS LINE AT THE TOP
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# django-models/LibraryProject/settings.py
# ... at the bottom of the file

LOGIN_REDIRECT_URL = '/' # Redirects to home page after login
LOGOUT_REDIRECT_URL = '/login/' # Redirects to login page after logout

AUTH_USER_MODEL = 'bookshelf.CustomUser'

# Configure your CSP headers.
# This is a basic example that allows content only from your own domain.
CSP_DEFAULT_SRC = ("'self'",)
CSP_STYLE_SRC = ("'self'", "'unsafe-inline'") # Add 'unsafe-inline' if you have inline styles
CSP_SCRIPT_SRC = ("'self'",)
CSP_IMG_SRC = ("'self'",)
# CSP_REPORT_URI = ('/your-csp-report-url/',) # Optional: sends reports of policy violations"

##   *** Security Settings for HTTPS and Secure Headers ***## 
# Step 1: Configure Django for HTTPS Support
# Redirect all non-HTTPS requests to HTTPS. This is crucial for enforcing secure connections.
SECURE_SSL_REDIRECT = True
# Enable HTTP Strict Transport Security (HSTS). This tells browsers to only access your site via HTTPS for a set duration.
# The value is in seconds. 31536000 is equivalent to one year.
SECURE_HSTS_SECONDS = 31536000
# Include all subdomains in the HSTS policy.
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# Allow your site to be included in the HSTS preload list.
# This requires a submission to the hstspreload.org service after your site is working.
SECURE_HSTS_PRELOAD = True

# Step 2: Enforce Secure Cookies
# Ensure session cookies are only transmitted over HTTPS.
SESSION_COOKIE_SECURE = True
# Ensure CSRF cookies are only transmitted over HTTPS.
CSRF_COOKIE_SECURE = True

# Step 3: Implement Secure Headers
# Prevent your site from being framed, protecting against clickjacking attacks.
X_FRAME_OPTIONS = "DENY"
# Prevent browsers from MIME-sniffing a response away from the declared content-type.
SECURE_CONTENT_TYPE_NOSNIFF = True
# Enable the browser's built-in XSS filter.
SECURE_BROWSER_XSS_FILTER = True